// 0 이상의 두 정수가 문자열 a, b로 주어질 때, a + b의 값을 문자열로 return 하는 solution 함수를 작성해 주세요.

// 제한사항
// 1 ≤ a의 길이 ≤ 100,000
// 1 ≤ b의 길이 ≤ 100,000
// a와 b는 숫자로만 이루어져 있습니다.
// a와 b는 정수 0이 아니라면 0으로 시작하지 않습니다.

// 인자로 문자열 숫자가 들어옴
// 넘버로 변경하고 연산 후에 결과값을 다시 문자로 변경하여 반환해야 함
// 이거 왜 정답률 82퍼지 => bigint 연산 때문에

// 예시 2번 참고 자료
/**
 * BigInt와 Number는 어떤 면에서 비슷하지만 중요한 차이점이 있습니다.
 * 예컨대 BigInt는 내장 Math 객체의 메서드와 함께 사용할 수 없고, 연산에서 Number와 혼합해 사용할 수 없습니다.
 * 따라서 먼저 같은 자료형으로 변환해야 합니다. 그러나, 💡 BigInt가 Number로 바뀌면 정확성을 잃을 수 있으니 주의해야 합니다. 💡 => Number로 변경하고 연산하니 값이 다름
 *
 * BigInt type끼리는 매우 정확한 연산이 가능함.
 */
function solution(a, b) {
  const result = BigInt(a) + BigInt(b);

  return String(result);
}

// solution("582", "734"); // "1316"
solution("18446744073709551615", "287346502836570928366"); // "305793246910280479981" << bigInt
// solution("0", "0"); // 0
